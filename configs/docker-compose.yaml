name: spot_platform
services:
  filebrowser:
    image: filebrowser/filebrowser
    pull_policy: always
    networks:
      - rosnet
    ports:
      - 8080:8080
    volumes:
      - ${HOME}:/srv
    command: -r /srv --noauth -b "${HOME}" -d /tmp/database.db -p 8080 --disable-exec

  zenoh_router: 
    image: eclipse/zenoh-bridge-ros2dds:latest
    pull_policy: always
    networks:
      - rosnet
    # expose REST API, and Zenoh API
    ports:
      - 7447:7447
      - 8000:8000
    
    # start the Zenoh router to allow remote access on port 8888
    # also allows REST API access via Zenoh on port 8080
    #command: "-r 8000 -l tcp/0.0.0.0:7447 router"
    command: "-c /etc/zenoh/zenoh.json5 router"
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
      - ./zenoh.json5:/etc/zenoh/zenoh.json5:ro
    links:
      - spot_drivers

    # need to set ROS_DISTRO to the correct version for the bridge to work correctly
    environment:
    - ROS_DISTRO=humble

  spot_drivers:
    image: lcas.lincoln.ac.uk/lcas/spot_platform:main
    # build:
    #   context: ../
    #   dockerfile: Dockerfile
    # platform: linux/amd64
    pull_policy: always
    user: "ros"

    # expose desktop access
    ports:
      # port for novnc
      - 5801:5801
      - 5901:5901
      # port for code-serer
      - 9999:9999
    
    # NOTE: We expect the environment varibable ROBOT_NAME to be set, e.g. in `.env`
    hostname: "${ROBOT_NAME}"
    # nned privileged mode to access the camera and hardware
    privileged: true
    ipc: host
    # command: bash -c "while true; do sleep 5; done" # launch in background
    command: bash -c "source /opt/ros/lcas/spot_ros2/setup.bash; echo $$CYCLONEDDS_URI; (code-server --auth none -an ${ROBOT_NAME} --bind-addr 0.0.0.0:9999 --cert &); ros2 launch spot_driver spot_driver.launch.py launch_rviz:=False launch_image_publishers:=True publish_point_clouds:=True stitch_front_images:=True"
    volumes:
      - /dev:/dev
      - ${HOME}:/home/ros/robot_home
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
    shm_size: '2gb' 
    environment:
      # always use virtual desktop
      - DISPLAY:1
      # - 'LIBGL_ALWAYS_SOFTWARE=1'
      # - 'ROS_DOMAIN_ID=0'
    env_file:
      - ./.env
    networks:
      - rosnet
    cap_add:
        - NET_ADMIN
        - SYS_PTRACE
    security_opt:
      - seccomp:unconfined
      - apparmor:unconfined

networks:
  rosnet:
    driver: bridge
    driver_opts:
      com.docker.network.container_iface_prefix: eth
